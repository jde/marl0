openapi: 3.0.3
info:
  title: Marl0 Product API
  version: 0.1.0
  description: API for creating and traversing entity provenance, classification, and semantic graphs.

paths:
  /api/product/perform/activity:
    post:
      summary: Perform an activity and optionally generate entities or classifications
      operationId: performActivity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformActivityRequest'
      responses:
        '201':
          description: Activity and any created entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformActivityResponse'

  /api/product/entity:
    get:
      summary: Get an entity by ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Entity object

  /api/product/agent:
    get:
      summary: Get agent by ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Agent object

  /api/product/classifications:
    get:
      summary: Get classifications for an entity
      parameters:
        - name: entityId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Classification list

  /api/product/classification/history:
    get:
      summary: Get full classification history
      parameters:
        - name: entityId
          in: query
          required: true
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Classification history

  /api/product/entities/by-label:
    get:
      summary: Get entities matching a classification label
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Entity list

  /api/product/provenance:
    get:
      summary: Get provenance activities for an entity
      parameters:
        - name: entityId
          in: query
          required: true
          schema:
            type: string
        - name: depth
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Activity list

  /api/product/provenance/timeline:
    get:
      summary: Get timeline of ancestors for an entity
      parameters:
        - name: entityId
          in: query
          required: true
          schema:
            type: string
        - name: depth
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Entity timeline

  /api/product/siblings:
    get:
      summary: Get sibling entities generated by the same activity
      parameters:
        - name: entityId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Entity list

  /api/product/ancestry:
    get:
      summary: Get recursive ancestors of an entity
      parameters:
        - name: entityId
          in: query
          required: true
          schema:
            type: string
        - name: depth
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Ancestor entity ID list

  /api/product/consensus/labels:
    get:
      summary: Compute consensus labels for an entity
      parameters:
        - name: entityId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Consensus classification object

  /api/product/classification/diffs:
    get:
      summary: Get classification differences between two entities
      parameters:
        - name: entityA
          in: query
          required: true
          schema:
            type: string
        - name: entityB
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Classification difference list

  /api/product/forks/from:
    get:
      summary: Get forks generated from a source entity
      parameters:
        - name: entityId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Forked entity list

  /api/product/latest/versions:
    get:
      summary: Get latest descendant leaf entities
      parameters:
        - name: entityId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Latest version ID list

components:
  schemas:
    PerformActivityRequest:
      type: object
      required: [agent, activity, usedEntityIds]
      properties:
        agent:
          type: object
          properties:
            id: { type: string }
            name: { type: string }
            version: { type: string }
            agentKind: { type: string, enum: [human, automated, hybrid] }
            agentMethod: { type: string }
        activity:
          type: object
          properties:
            action: { type: string }
            timestamp: { type: string, format: date-time }
        usedEntityIds:
          type: array
          items: { type: string }
        generatedEntities:
          type: array
          items:
            type: object
            properties:
              payload: {}
              classifications:
                type: array
                items:
                  $ref: '#/components/schemas/ClassificationInput'
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationInput'

    PerformActivityResponse:
      type: object
      properties:
        activity:
          type: object
        entities:
          type: array
          items:
            type: object

    ClassificationInput:
      type: object
      required: [entityId, name, value]
      properties:
        entityId: { type: string }
        name: { type: string }
        value: { type: string }
        confidence: { type: number }
        namespace: { type: string }
        supersedesId: { type: string }